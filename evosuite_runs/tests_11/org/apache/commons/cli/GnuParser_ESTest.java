/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 05 23:23:56 GMT 2023
 */

package org.apache.commons.cli;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.cli.GnuParser;
import org.apache.commons.cli.Options;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class GnuParser_ESTest extends GnuParser_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      GnuParser gnuParser0 = new GnuParser();
      String[] stringArray0 = new String[0];
      String[] stringArray1 = gnuParser0.flatten((Options) null, stringArray0, false);
      assertEquals(0, stringArray1.length);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      GnuParser gnuParser0 = new GnuParser();
      Options options0 = new Options();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "${zP";
      stringArray0[1] = "s";
      stringArray0[2] = "-=TM$cyRBM @;`=";
      options0.addRequiredOption("", "'kyM", true, "${zP");
      // Undeclared exception!
      try { 
        gnuParser0.flatten(options0, stringArray0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Options options0 = new Options();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "-=TM$cyRBM @;`=";
      GnuParser gnuParser0 = new GnuParser();
      String[] stringArray1 = gnuParser0.flatten(options0, stringArray0, true);
      assertEquals(6, stringArray1.length);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Options options0 = new Options();
      GnuParser gnuParser0 = new GnuParser();
      Options options1 = options0.addOption((String) null, ",", true, "--,");
      String[] stringArray0 = new String[7];
      stringArray0[0] = "--,";
      // Undeclared exception!
      try { 
        gnuParser0.flatten(options1, stringArray0, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      GnuParser gnuParser0 = new GnuParser();
      Options options0 = new Options();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "-";
      // Undeclared exception!
      try { 
        gnuParser0.flatten(options0, stringArray0, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Options options0 = new Options();
      GnuParser gnuParser0 = new GnuParser();
      Options options1 = options0.addRequiredOption("", "---ty", false, "");
      String[] stringArray0 = new String[2];
      stringArray0[0] = "--ty";
      stringArray0[1] = "o";
      String[] stringArray1 = gnuParser0.flatten(options1, stringArray0, false);
      gnuParser0.flatten(options1, stringArray1, false);
      assertEquals(3, stringArray1.length);
  }
}
