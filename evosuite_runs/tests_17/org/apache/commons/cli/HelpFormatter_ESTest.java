/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 06 01:32:18 GMT 2023
 */

package org.apache.commons.cli;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import java.io.PrintWriter;
import java.io.StringWriter;
import java.io.UnsupportedEncodingException;
import java.util.Comparator;
import org.apache.commons.cli.HelpFormatter;
import org.apache.commons.cli.Option;
import org.apache.commons.cli.OptionGroup;
import org.apache.commons.cli.Options;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class HelpFormatter_ESTest extends HelpFormatter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockFile mockFile0 = new MockFile((String) null, "0R=-_{Jp5UQXq|");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      MockFile mockFile1 = new MockFile("--");
      mockFile1.setLastModified(1);
      mockFile0.renameTo(mockFile1);
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(mockPrintWriter0, false);
      Object[] objectArray0 = new Object[6];
      objectArray0[0] = (Object) "0R=-_{Jp5UQXq|";
      Object object0 = new Object();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      objectArray0[1] = object0;
      Object object1 = new Object();
      objectArray0[2] = object1;
      objectArray0[3] = (Object) mockPrintWriter1;
      objectArray0[4] = (Object) mockPrintWriter1;
      objectArray0[5] = (Object) mockPrintWriter1;
      PrintWriter printWriter0 = mockPrintWriter1.format("-", objectArray0);
      Options options0 = new Options();
      options0.hasLongOption(",r6t#*wLMc'k.U");
      helpFormatter0.printUsage(printWriter0, (-1), "B$=Bb-yW59&x;liAE_", options0);
      helpFormatter0.getSyntaxPrefix();
      helpFormatter0.getLongOptSeparator();
      StringBuffer stringBuffer0 = null;
      try {
        stringBuffer0 = new StringBuffer((-1));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // -1
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("usage: ");
      helpFormatter0.printWrapped((PrintWriter) mockPrintWriter0, 17, "-");
      StringBuffer stringBuffer0 = new StringBuffer(1926);
      StringBuffer stringBuffer1 = helpFormatter0.renderWrappedText(stringBuffer0, 5, 5, "ff$}Zd?mU5]ra^0t");
      helpFormatter0.renderWrappedText(stringBuffer1, 1237, 2110, "Ipy+-mjg+(Q=gE=nn?");
      Options options0 = new Options();
      Options options1 = options0.addOption("m", "-");
      helpFormatter0.printHelp("75mo<zA3^\"5THD", ">", options1, ">", true);
      helpFormatter0.getOptionComparator();
      helpFormatter0.getSyntaxPrefix();
      Options options2 = options1.addOption("", "/d48", false, "\n");
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp((-2), "75mo<zA3^\"5THD", "7S|8n!T;,6", options2, "", true);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("usage: ");
      helpFormatter0.printWrapped((PrintWriter) mockPrintWriter0, 17, "-");
      StringBuffer stringBuffer0 = new StringBuffer(1926);
      Options options0 = new Options();
      options0.getOptions();
      HelpFormatter helpFormatter1 = new HelpFormatter();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 74, "-");
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 74, "arg", "usage: ", options0, (-1094), (-693), "-\"#-yz}.n_S`U", true);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // -1094
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("usage: ");
      helpFormatter0.printWrapped((PrintWriter) mockPrintWriter0, 17, "-");
      StringBuffer stringBuffer0 = new StringBuffer(1926);
      Options options0 = new Options();
      options0.hasLongOption("-");
      options0.getOptions();
      HelpFormatter helpFormatter1 = new HelpFormatter();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 74, "-");
      Options options1 = new Options();
      // Undeclared exception!
      helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 1, "992ZyZ", "992ZyZ", options1, 74, 1, "992ZyZ", true);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "P>3'1x%,C.J33yVV'");
      helpFormatter0.renderOptions(stringBuffer0, 64, options0, 64, 64);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("usage: ");
      helpFormatter0.printWrapped((PrintWriter) mockPrintWriter0, 17, "-");
      StringBuffer stringBuffer0 = new StringBuffer(1926);
      StringBuffer stringBuffer1 = helpFormatter0.renderWrappedText(stringBuffer0, 5, 5, "ff$}Zd?mU5]ra^0t");
      helpFormatter0.renderWrappedText(stringBuffer1, 1237, 2110, "Ipy+-mjg+(Q=gE=nn?");
      Options options0 = new Options();
      HelpFormatter helpFormatter1 = new HelpFormatter();
      helpFormatter1.printHelp(" ", "_^>J=", options0, "");
      helpFormatter1.getOptPrefix();
      helpFormatter1.printHelp((-1), "org.apache.commons.cli.Option$1", "ff$}Zd?mU5]ra^0t", options0, "-");
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      int int0 = 13;
      String string0 = "6O'~-:)08!";
      String string1 = "";
      Options options0 = null;
      helpFormatter0.setSyntaxPrefix("   ");
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp(13, "6O'~-:)08!", "", (Options) null, "   ", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("usage: ");
      helpFormatter0.printWrapped((PrintWriter) mockPrintWriter0, 17, "-");
      StringBuffer stringBuffer0 = new StringBuffer(1926);
      StringBuffer stringBuffer1 = helpFormatter0.renderWrappedText(stringBuffer0, 5, 5, "ff$}Zd?mU5]ra^0t");
      helpFormatter0.renderWrappedText(stringBuffer1, 1237, 2110, "Ipy+-mjg+(Q=gE=nn?");
      Options options0 = new Options();
      Options options1 = options0.addOption("m", "M67]J;]~xy");
      helpFormatter0.printHelp("75mo<zA3^\"5THD", ">", options1, ">", true);
      helpFormatter0.getOptionComparator();
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultNewLine = "?o)z|B@*+mf[U";
      helpFormatter0.setDescPadding(1556);
      helpFormatter0.getSyntaxPrefix();
      helpFormatter0.getNewLine();
      Comparator<Option> comparator0 = helpFormatter0.optionComparator;
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("v#");
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(mockPrintWriter0);
      helpFormatter0.printWrapped((PrintWriter) mockPrintWriter1, (-1976), 1556, "");
      helpFormatter0.setOptionComparator(comparator0);
      Options options0 = new Options();
      Options options1 = options0.addRequiredOption((String) null, "?o)z|B@*+mf[U", false, "");
      helpFormatter0.printHelp("usage: ", options1, false);
      helpFormatter0.setLeftPadding(1556);
      StringBuffer stringBuffer0 = new StringBuffer("Cannot add value, list full.");
      helpFormatter0.printHelp("?o)z|B@*+mf[U", "WVB)_Lr*", options1, "zl`u[;?T");
      helpFormatter0.getOptPrefix();
      helpFormatter0.printHelp("v#", options1);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("usage: ");
      helpFormatter0.printWrapped((PrintWriter) mockPrintWriter0, 17, "-");
      StringBuffer stringBuffer0 = new StringBuffer(1926);
      Options options0 = new Options();
      options0.getOptions();
      HelpFormatter helpFormatter1 = new HelpFormatter();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 74, "");
      Options options1 = new Options();
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, (-1), "", "\n", options1, 64, 3, "\n", true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cmdLineSyntax not provided
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("usage: ");
      helpFormatter0.printWrapped((PrintWriter) mockPrintWriter0, 17, "-");
      StringBuffer stringBuffer0 = new StringBuffer(1926);
      Options options0 = new Options();
      options0.getOptions();
      HelpFormatter helpFormatter1 = new HelpFormatter();
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp("", "[ARG...]", options0, " ", true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cmdLineSyntax not provided
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      StringBuffer stringBuffer0 = new StringBuffer();
      String string0 = "M3";
      helpFormatter0.renderWrappedText(stringBuffer0, 4603, 866, "M3");
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      Options options1 = options0.addOptionGroup(optionGroup0);
      Options options2 = options1.addOption("", false, ">");
      helpFormatter0.printHelp("M3", options2, false);
      Options options3 = new Options();
      // Undeclared exception!
      try { 
        options3.addOption("usage: ", "c%dLinSyntax`not wrovided");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The option 'usage: ' contains an illegal character : ':'
         //
         verifyException("org.apache.commons.cli.OptionValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      StringBuffer stringBuffer0 = new StringBuffer("--");
      StringBuffer stringBuffer1 = helpFormatter0.renderWrappedText(stringBuffer0, 5, 5, "ff$}Zd?mU5]ra^0t");
      helpFormatter0.renderWrappedText(stringBuffer1, 1237, 2110, "Ipy+-mjg+(Q=gE=nn?");
      Options options0 = new Options();
      Options options1 = options0.addOption("m", "-");
      helpFormatter0.printHelp("75mo<zA3^\"5THD", ">", options1, ">", true);
      helpFormatter0.getOptionComparator();
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("usage: ");
      helpFormatter0.printWrapped((PrintWriter) mockPrintWriter0, 17, ">");
      StringBuffer stringBuffer0 = new StringBuffer(3);
      Options options0 = new Options();
      options0.getOptions();
      HelpFormatter helpFormatter1 = new HelpFormatter();
      helpFormatter1.printHelp("arg", "3g8MUk$f/U", options0, "arg");
      // Undeclared exception!
      helpFormatter0.printHelp(1, "usage: ", "--", options0, "usage: ");
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("usage: ");
      helpFormatter0.printWrapped((PrintWriter) mockPrintWriter0, 17, ">");
      StringBuffer stringBuffer0 = new StringBuffer(3);
      Options options0 = new Options();
      options0.getOptions();
      HelpFormatter helpFormatter1 = new HelpFormatter();
      helpFormatter1.printHelp("arg", "3g8MUk$f/U", options0, "arg");
      helpFormatter1.getOptPrefix();
      // Undeclared exception!
      helpFormatter0.printHelp(1, "usage: ", "--", options0, "usage: ");
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      StringBuffer stringBuffer0 = new StringBuffer("-");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(" ");
      helpFormatter0.printWrapped((PrintWriter) mockPrintWriter0, 74, " ");
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("28%\"6j2=~YrmO}j(J");
      options0.toString();
      helpFormatter0.printHelp("5", "'Vw,\"!rhu+LZ", options0, "> ");
      helpFormatter0.printHelp(801, "'Vw,\"!rhu+LZ", "28%\"6j2=~YrmO}j(J", options0, "> ");
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      StringBuffer stringBuffer0 = new StringBuffer("[ option: ");
      helpFormatter0.renderWrappedText(stringBuffer0, 5, 5, "[ option: ");
      Options options1 = new Options();
      options1.getOptions();
      // Undeclared exception!
      try { 
        options1.addOption("4'{pwE:H6H]4GB9+.", "usage: ");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The option '4'{pwE:H6H]4GB9+.' contains an illegal character : '''
         //
         verifyException("org.apache.commons.cli.OptionValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultNewLine = "?o)z|B@*+mf[U";
      helpFormatter0.setDescPadding(1556);
      helpFormatter0.getSyntaxPrefix();
      helpFormatter0.getNewLine();
      Comparator<Option> comparator0 = helpFormatter0.optionComparator;
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("v#");
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(mockPrintWriter0);
      helpFormatter0.printWrapped((PrintWriter) mockPrintWriter1, (-1976), 1556, "");
      helpFormatter0.setOptionComparator(comparator0);
      Options options0 = new Options();
      Options options1 = options0.addRequiredOption((String) null, "?o)z|B@*+mf[U", false, "");
      helpFormatter0.printHelp("usage: ", options1, false);
      helpFormatter0.setLeftPadding(1556);
      StringBuffer stringBuffer0 = new StringBuffer("Cannot add value, list full.");
      // Undeclared exception!
      try { 
        helpFormatter0.renderOptions(stringBuffer0, 1465, options0, 1, (-2));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // -2
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultNewLine = "?o)z|B@*+mf[U";
      helpFormatter0.setDescPadding(1556);
      helpFormatter0.getSyntaxPrefix();
      helpFormatter0.getNewLine();
      Comparator<Option> comparator0 = helpFormatter0.optionComparator;
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("v#");
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(mockPrintWriter0);
      helpFormatter0.printWrapped((PrintWriter) mockPrintWriter1, (-1976), 1556, "");
      helpFormatter0.setOptionComparator(comparator0);
      Options options0 = new Options();
      Options options1 = options0.addRequiredOption((String) null, "?o)z|B@*+mf[U", false, "");
      helpFormatter0.printHelp("usage: ", options1, false);
      helpFormatter0.setLeftPadding(1556);
      StringBuffer stringBuffer0 = new StringBuffer("Cannot add value, list full.");
      helpFormatter0.getOptPrefix();
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      StringBuffer stringBuffer0 = new StringBuffer("-");
      Options options0 = new Options();
      helpFormatter0.printHelp("cmdLineSyntax not provided", "q4Euv*QPN", options0, (String) null);
      helpFormatter0.getOptPrefix();
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      helpFormatter0.printHelp(".CGYHy9=_", "--", options0, "9A&6D<zK", true);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("28%n6j2=~YrmLO}j(J");
      helpFormatter0.findWrapPos("5", 0, 0);
      helpFormatter0.getArgName();
      helpFormatter0.printHelp("28%n6j2=~YrmLO}j(J", "@sN.o:z$", options0, ".CGYHy9=_", true);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("usage: ");
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter("K,+s{`Cz L.");
      helpFormatter0.findWrapPos("K,+s{`Cz L.", 0, 17);
      helpFormatter0.getArgName();
      helpFormatter0.printWrapped((PrintWriter) mockPrintWriter1, (-1), "K,+s{`Cz L.");
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      helpFormatter0.defaultNewLine = "LD";
      helpFormatter0.getArgName();
      Options options0 = null;
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp("LD", (Options) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      StringBuffer stringBuffer0 = new StringBuffer(" ");
      // Undeclared exception!
      try { 
        helpFormatter0.renderWrappedText(stringBuffer0, (-819), (-819), "LD");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("usage: ");
      helpFormatter0.printWrapped((PrintWriter) mockPrintWriter0, 17, "-");
      StringBuffer stringBuffer0 = new StringBuffer(1926);
      StringBuffer stringBuffer1 = helpFormatter0.renderWrappedText(stringBuffer0, 5, 5, "ff$}Zd?mU5]ra^0t");
      helpFormatter0.renderWrappedText(stringBuffer1, 1237, 2110, "Ipy+-mjg+(Q=gE=nn?");
      Options options0 = new Options();
      options0.addOption("m", "M67]J;]~xy");
      // Undeclared exception!
      try { 
        helpFormatter0.printWrapped((PrintWriter) null, 3, "ff$}Zd?mU5]ra^0t");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = "";
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp("", (Options) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cmdLineSyntax not provided
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("n'*sRKi", true);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFileOutputStream0);
      helpFormatter0.printWrapped((PrintWriter) mockPrintWriter0, 108, "n'*sRKi");
      HelpFormatter helpFormatter1 = new HelpFormatter();
      helpFormatter1.printUsage((PrintWriter) mockPrintWriter0, 4, " ");
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("usage: ");
      helpFormatter0.printWrapped((PrintWriter) mockPrintWriter0, 17, "-");
      StringBuffer stringBuffer0 = new StringBuffer(1926);
      String string0 = "ff$}Zd?mU5]ra^0t";
      helpFormatter0.renderWrappedText(stringBuffer0, 5, 5, "ff$}Zd?mU5]ra^0t");
      helpFormatter0.findWrapPos("M67]J;]~xy", (-346), 9);
      Options options0 = new Options();
      boolean boolean0 = false;
      Option option0 = new Option("", "ff$}Zd?mU5]ra^0t", false, " ");
      Options options1 = options0.addOption(option0);
      // Undeclared exception!
      try { 
        options1.addOption("usage: ", (String) null, true, "/QNU");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The option 'usage: ' contains an illegal character : ':'
         //
         verifyException("org.apache.commons.cli.OptionValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("usage: ");
      HelpFormatter helpFormatter1 = new HelpFormatter();
      helpFormatter1.printWrapped((PrintWriter) mockPrintWriter0, 0, "");
      // Undeclared exception!
      try { 
        helpFormatter0.printUsage((PrintWriter) null, 2095, "0k! ;EYdR5*5Yt");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("usage: ");
      helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 44, "");
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      StringBuffer stringBuffer0 = new StringBuffer();
      helpFormatter0.renderWrappedText(stringBuffer0, 0, 13, "");
      Options options0 = new Options();
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      options0.getOptions();
      helpFormatter0.printHelp("g4r8", "", options0, "");
      helpFormatter0.getOptPrefix();
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      options0.getOptions();
      helpFormatter0.printHelp("3g8MUk$f/U", "~T)Nhkvc", options0, "3g8MUk$f/U");
      helpFormatter0.getOptPrefix();
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultNewLine = "LD";
      helpFormatter0.getOptPrefix();
      helpFormatter0.rtrim("P5S.S@");
      MockFile mockFile0 = new MockFile("LD");
      helpFormatter0.getSyntaxPrefix();
      helpFormatter0.getLongOptPrefix();
      MockPrintWriter mockPrintWriter0 = null;
      try {
        mockPrintWriter0 = new MockPrintWriter(mockFile0, "LD");
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(Throwable e) {
         //
         // LD
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockPrintWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("\n");
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(mockPrintWriter0);
      int int0 = (-1976);
      // Undeclared exception!
      try { 
        helpFormatter0.printWrapped((PrintWriter) mockPrintWriter1, (-1976), (-1976), "usage: ");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("arg");
      helpFormatter0.findWrapPos("usage: ", 0, 1);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      options0.hasOption("-");
      options0.addOption("", "-");
      // Undeclared exception!
      try { 
        helpFormatter0.printWrapped((PrintWriter) null, 17, ">.;Q;Zv><:+nPybj4");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      StringBuffer stringBuffer0 = new StringBuffer();
      CharSequence.compare(" ", "arg");
      helpFormatter0.renderWrappedText(stringBuffer0, 3, 583, "!r");
      Options options0 = new Options();
      options0.addOption("", "--");
      helpFormatter0.findWrapPos("!r", 85, (-1));
      // Undeclared exception!
      try { 
        helpFormatter0.findWrapPos(",JeOW-.{cn,ek[!o|", 3, (-65));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      int int0 = (-615);
      helpFormatter0.defaultWidth = (-615);
      helpFormatter0.defaultLongOptPrefix = "";
      String string0 = "";
      helpFormatter0.setNewLine("");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      int int1 = (-1934);
      // Undeclared exception!
      try { 
        helpFormatter0.createPadding((-1934));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // -1934
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp("EL8$3a[7n1cc?tC2|", (Options) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      helpFormatter0.defaultNewLine = "LD";
      Options options0 = null;
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp("LD", (Options) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setWidth(74);
      helpFormatter0.getDescPadding();
      Options options0 = new Options();
      StringWriter stringWriter0 = new StringWriter(74);
      stringWriter0.getBuffer();
      StringBuffer stringBuffer0 = new StringBuffer();
      helpFormatter0.renderOptions(stringBuffer0, (-3838), options0, 381, 1874);
      // Undeclared exception!
      try { 
        helpFormatter0.renderOptions(stringBuffer0, 3, (Options) null, 1874, 1556);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("Hr/JfHwE/A&gbEr,");
      helpFormatter0.printWrapped((PrintWriter) mockPrintWriter0, (-3392), "");
      // Undeclared exception!
      try { 
        helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, (-14), "Hr/JfHwE/A&gbEr,");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      HelpFormatter helpFormatter1 = new HelpFormatter();
      helpFormatter1.getNewLine();
      Comparator<Option> comparator0 = helpFormatter0.optionComparator;
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("usage: ");
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(mockPrintWriter0);
      helpFormatter0.printWrapped((PrintWriter) mockPrintWriter0, 3, 1839, "arg");
      HelpFormatter helpFormatter2 = new HelpFormatter();
      Comparator<Option> comparator1 = helpFormatter0.optionComparator;
      helpFormatter2.setOptionComparator(comparator1);
      Options options0 = new Options();
      // Undeclared exception!
      try { 
        options0.addRequiredOption("*|7k9=vJ!=MtU", "-", true, (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The option '*|7k9=vJ!=MtU' contains an illegal character : '*'
         //
         verifyException("org.apache.commons.cli.OptionValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      StringBuffer stringBuffer0 = new StringBuffer();
      CharSequence.compare(" ", "arg");
      helpFormatter0.renderWrappedText(stringBuffer0, 3, 583, "!r");
      Options options0 = new Options();
      Options options1 = options0.addOption("", "--");
      helpFormatter0.findWrapPos("!r", 85, (-1));
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp("", ",JeOW-.{cn,ek[!o|", options1, "!r");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cmdLineSyntax not provided
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      int int0 = 1;
      helpFormatter0.defaultLeftPad = 1;
      // Undeclared exception!
      try { 
        helpFormatter0.renderWrappedText((StringBuffer) null, 1, 1, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("usage: ");
      helpFormatter0.printWrapped((PrintWriter) mockPrintWriter0, 17, "-");
      StringBuffer stringBuffer0 = new StringBuffer(1926);
      Options options0 = new Options();
      options0.getOptions();
      HelpFormatter helpFormatter1 = new HelpFormatter();
      helpFormatter1.printHelp("--", "0^V\bJ0&+=+;d^EC", options0, "3g8MUk$f/U");
      // Undeclared exception!
      try { 
        helpFormatter1.renderOptions(stringBuffer0, 4439, options0, (-3365), (-3365));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // -3365
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("usage: ");
      // Undeclared exception!
      try { 
        helpFormatter0.printWrapped((PrintWriter) mockPrintWriter0, (-4616), " | ");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = "org.apache.commons.cli.HelpFormatter";
      helpFormatter0.defaultArgName = "org.apache.commons.cli.HelpFormatter";
      String string1 = "usage: ";
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("usage: ");
      // Undeclared exception!
      try { 
        helpFormatter0.printWrapped((PrintWriter) mockPrintWriter0, (-7), "arg");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("28%n6j2=~YrmLO}j(J");
      helpFormatter0.findWrapPos("5", 0, 0);
      helpFormatter0.getArgName();
      // Undeclared exception!
      try { 
        helpFormatter0.printWrapped((PrintWriter) null, 3, "28%n6j2=~YrmLO}j(J");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = "";
      String string1 = "?o)z|B@*+mf[U";
      helpFormatter0.setDescPadding(1556);
      helpFormatter0.getSyntaxPrefix();
      helpFormatter0.getNewLine();
      Comparator<Option> comparator0 = helpFormatter0.optionComparator;
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("C");
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(mockPrintWriter0);
      int int0 = 0;
      HelpFormatter helpFormatter1 = new HelpFormatter();
      // Undeclared exception!
      try { 
        helpFormatter1.printWrapped((PrintWriter) mockPrintWriter0, 3, (-1976), "EMs4qfpxx+0");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // -1976
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("usage: ");
      helpFormatter0.printWrapped((PrintWriter) mockPrintWriter0, 1900, "usage: ");
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      options0.addRequiredOption("g", "", false, "\n");
      helpFormatter0.printHelp(" [ARG]", options0, false);
      helpFormatter0.setLeftPadding(117);
      StringBuffer stringBuffer0 = new StringBuffer(" ");
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer1 = stringWriter0.getBuffer();
      // Undeclared exception!
      try { 
        helpFormatter0.renderOptions(stringBuffer1, (-2), options0, (-1970), (-1970));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // -1970
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      HelpFormatter helpFormatter1 = new HelpFormatter();
      Comparator<Option> comparator0 = helpFormatter1.getOptionComparator();
      helpFormatter0.setOptionComparator(comparator0);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultLeftPad = 1;
      helpFormatter0.setWidth(74);
      helpFormatter0.getDescPadding();
      Options options0 = new Options();
      StringWriter stringWriter0 = new StringWriter(2);
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      StringBuffer stringBuffer1 = helpFormatter0.renderOptions(stringBuffer0, (-3838), options0, 3, 381);
      helpFormatter0.renderOptions(stringBuffer1, (-2), options0, 74, 74);
      HelpFormatter helpFormatter1 = new HelpFormatter();
      helpFormatter1.getDescPadding();
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      StringBuffer stringBuffer0 = new StringBuffer();
      helpFormatter0.renderWrappedText(stringBuffer0, 3, 583, "!r");
      Options options0 = new Options();
      options0.addOption("", "--");
      helpFormatter0.findWrapPos("!r", 85, (-1));
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultNewLine = "?o)z|B@*+mf[U";
      helpFormatter0.setDescPadding(1556);
      helpFormatter0.getSyntaxPrefix();
      helpFormatter0.getNewLine();
      Comparator<Option> comparator0 = helpFormatter0.optionComparator;
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("v#");
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(mockPrintWriter0);
      helpFormatter0.printWrapped((PrintWriter) mockPrintWriter1, (-1976), 1556, "");
      helpFormatter0.setOptionComparator(comparator0);
      Options options0 = new Options();
      Options options1 = options0.addRequiredOption((String) null, "?o)z|B@*+mf[U", false, "");
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp("", options1, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cmdLineSyntax not provided
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultNewLine = "?o)z|B@*+mf[U";
      helpFormatter0.setDescPadding(1556);
      helpFormatter0.getSyntaxPrefix();
      helpFormatter0.getNewLine();
      Comparator<Option> comparator0 = helpFormatter0.optionComparator;
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("v#");
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(mockPrintWriter0);
      helpFormatter0.printWrapped((PrintWriter) mockPrintWriter1, (-1976), 1556, "");
      helpFormatter0.setOptionComparator(comparator0);
      Options options0 = new Options();
      Options options1 = options0.addRequiredOption((String) null, "?o)z|B@*+mf[U", false, "");
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp((String) null, options1, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cmdLineSyntax not provided
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      options0.getOptions();
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp("", "~T)Nhkvc", options0, "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cmdLineSyntax not provided
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      options0.addRequiredOption("g", "", false, "\n");
      helpFormatter0.printHelp(" [ARG]", options0, false);
      HelpFormatter helpFormatter1 = new HelpFormatter();
      // Undeclared exception!
      try { 
        helpFormatter1.printHelp((String) null, "AWPJILL11+%Gm'NF1", options0, "-", true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cmdLineSyntax not provided
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultNewLine = "?o)z|B@*+mf[U";
      helpFormatter0.setDescPadding(1556);
      helpFormatter0.defaultSyntaxPrefix = "";
      helpFormatter0.getSyntaxPrefix();
      helpFormatter0.getNewLine();
      Comparator<Option> comparator0 = helpFormatter0.optionComparator;
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("v#");
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(mockPrintWriter0);
      helpFormatter0.printWrapped((PrintWriter) mockPrintWriter1, (-1976), 0, "");
      helpFormatter0.setOptionComparator(comparator0);
      Options options0 = new Options();
      Options options1 = options0.addRequiredOption((String) null, "?o)z|B@*+mf[U", false, "");
      // Undeclared exception!
      try { 
        helpFormatter0.printHelp("", options1, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cmdLineSyntax not provided
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultLeftPad = 1;
      helpFormatter0.setWidth(74);
      helpFormatter0.getDescPadding();
      String string0 = "JDQUfUZMta";
      Options options0 = new Options();
      // Undeclared exception!
      try { 
        options0.addRequiredOption(" [ARG]", "!5w?\"rE63-WkY/|J|P", true, "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The option ' [ARG]' contains an illegal character : ' '
         //
         verifyException("org.apache.commons.cli.OptionValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setWidth((-8));
      StringBuffer stringBuffer0 = new StringBuffer("-");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(" ");
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("--");
      char[] charArray0 = new char[3];
      helpFormatter0.setLongOptSeparator("0.)L3V4fvm> a");
      charArray0[0] = '~';
      charArray0[1] = 'E';
      charArray0[2] = 'b';
      mockPrintWriter0.write(charArray0);
      helpFormatter0.defaultNewLine = "";
      int int0 = 0;
      String string0 = "YX|Kt3ad*\\aHc";
      // Undeclared exception!
      helpFormatter0.printWrapped((PrintWriter) mockPrintWriter0, 0, 0, "YX|Kt3ad*aHc");
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setLeftPadding(74);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("usage: ");
      Options options0 = new Options();
      options0.getOptions();
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      int int0 = 0;
      helpFormatter0.createPadding(0);
      helpFormatter0.findWrapPos("l+$7)gON58PtcJcdp>", 0, 0);
      int int1 = 1;
      helpFormatter0.createPadding(1);
      helpFormatter0.setLeftPadding(0);
      StringBuffer stringBuffer0 = null;
      try {
        stringBuffer0 = new StringBuffer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setOptionComparator((Comparator<Option>) null);
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setArgName("");
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      int int0 = 0;
      String string0 = "!r";
      StringBuffer stringBuffer0 = new StringBuffer("-");
      // Undeclared exception!
      helpFormatter0.renderWrappedText(stringBuffer0, 0, 0, "!r");
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      StringBuffer stringBuffer0 = new StringBuffer();
      int int0 = 0;
      // Undeclared exception!
      helpFormatter0.renderWrappedText(stringBuffer0, 0, 583, "!r");
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setNewLine(" :: ");
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getDescPadding();
      MockFile mockFile0 = new MockFile("arg", "6.}`");
      File file0 = MockFile.createTempFile("l6_W%&S*#<M[p:Oq}& ", "\n", (File) mockFile0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(file0);
      // Undeclared exception!
      helpFormatter0.printWrapped((PrintWriter) mockPrintWriter0, 0, "org.apache.commons.cli.ParseException");
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      HelpFormatter helpFormatter1 = new HelpFormatter();
      helpFormatter0.getDescPadding();
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("usage: ");
      // Undeclared exception!
      helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 0, "?| ");
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getSyntaxPrefix();
      helpFormatter0.defaultNewLine = "usage: ";
      helpFormatter0.setLongOptSeparator("usage: ");
      // Undeclared exception!
      helpFormatter0.printWrapped((PrintWriter) null, 0, "usage: ");
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      StringBuffer stringBuffer0 = new StringBuffer();
      // Undeclared exception!
      try { 
        helpFormatter0.findWrapPos((String) null, (-2945), (-2396));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      String string0 = "'";
      String string1 = "usage: ";
      helpFormatter0.setOptPrefix("usage: ");
      Options options0 = new Options();
      options0.addRequiredOption("arg", "'", false, "Mg>9q;pN\"Er*");
      // Undeclared exception!
      try { 
        options0.addOption("\n", false, "usage: ");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal option name '
         // '
         //
         verifyException("org.apache.commons.cli.OptionValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultLeftPad = 3;
      String string0 = null;
      String string1 = "-S";
      helpFormatter0.setOptPrefix("-S");
      // Undeclared exception!
      try { 
        helpFormatter0.findWrapPos((String) null, 0, (-1));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.HelpFormatter", e);
      }
  }

  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setSyntaxPrefix("%!?8DMU7");
      helpFormatter0.getNewLine();
      helpFormatter0.getLongOptPrefix();
      MockFile mockFile0 = new MockFile("--");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      mockPrintWriter0.append((CharSequence) "%!?8DMU7");
      int int0 = 61;
      Options options0 = new Options();
      OptionGroup optionGroup0 = new OptionGroup();
      Options options1 = options0.addOptionGroup(optionGroup0);
      options0.getMatchingOptions("--");
      // Undeclared exception!
      try { 
        options1.addOption("-", " WfTN_jVXD'k[");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal option name '-'
         //
         verifyException("org.apache.commons.cli.OptionValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("Hr/JfHwE/A&gbuE+r,");
      helpFormatter0.printWrapped((PrintWriter) mockPrintWriter0, 17, " | ");
  }

  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      Options options0 = new Options();
      helpFormatter0.printHelp(" [ARG]", " ]", options0, " ]");
      helpFormatter0.getOptPrefix();
  }

  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintStream mockPrintStream0 = new MockPrintStream("--");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockPrintStream0, false);
      Object[] objectArray0 = new Object[6];
      objectArray0[0] = (Object) mockPrintWriter0;
      objectArray0[1] = (Object) helpFormatter0;
      objectArray0[2] = (Object) mockPrintStream0;
      objectArray0[3] = (Object) helpFormatter0;
      objectArray0[4] = (Object) mockPrintWriter0;
      objectArray0[5] = (Object) helpFormatter0;
      PrintWriter printWriter0 = mockPrintWriter0.format("-", objectArray0);
      helpFormatter0.printWrapped(printWriter0, 44, 44, " zl|8[}3Z>DCa&");
      helpFormatter0.getLeftPadding();
  }

  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getWidth();
      StringWriter stringWriter0 = null;
      try {
        stringWriter0 = new StringWriter((-1232));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative buffer size
         //
         verifyException("java.io.StringWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.defaultLeftPad = (-1);
      helpFormatter0.getLongOptSeparator();
      helpFormatter0.setLongOptPrefix(" ");
      helpFormatter0.getWidth();
  }

  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.findWrapPos("D!g-y>tJ%PUW ", 0, 0);
  }

  @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setDescPadding((-201));
      helpFormatter0.setArgName("ZG=");
  }

  @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.getLongOptPrefix();
      helpFormatter0.setNewLine("VSbOk$");
      helpFormatter0.setLongOptPrefix("]");
  }

  @Test(timeout = 4000)
  public void test89()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("usage: ");
      // Undeclared exception!
      helpFormatter0.printWrapped((PrintWriter) mockPrintWriter0, 0, "cQ!Hc");
  }

  @Test(timeout = 4000)
  public void test90()  throws Throwable  {
      HelpFormatter helpFormatter0 = new HelpFormatter();
      helpFormatter0.setLongOptPrefix("");
      helpFormatter0.setDescPadding((-2412));
      helpFormatter0.setLongOptSeparator("org.apache.commons.cli.Options");
      helpFormatter0.getNewLine();
      assertEquals("org.apache.commons.cli.Options", helpFormatter0.getLongOptSeparator());
  }
}
