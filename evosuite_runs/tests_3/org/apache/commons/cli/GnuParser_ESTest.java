/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 05 23:46:33 GMT 2023
 */

package org.apache.commons.cli;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Properties;
import org.apache.commons.cli.CommandLine;
import org.apache.commons.cli.GnuParser;
import org.apache.commons.cli.Options;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class GnuParser_ESTest extends GnuParser_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      GnuParser gnuParser0 = new GnuParser();
      Options options0 = new Options();
      String[] stringArray0 = new String[0];
      String[] stringArray1 = gnuParser0.flatten(options0, stringArray0, true);
      assertFalse(stringArray1.equals((Object)stringArray0));
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      GnuParser gnuParser0 = new GnuParser();
      Options options0 = new Options();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "---G~'(<NA";
      options0.addRequiredOption("SWxf_", "", false, "org.apache.commons.cli.OptionValidator");
      stringArray0[1] = "7h}<tB.";
      stringArray0[2] = "--G~'(<NA";
      stringArray0[3] = "H$M`E{M6CFH!'l#";
      stringArray0[4] = "H$M`E{M6CFH!'l#";
      stringArray0[5] = "V";
      stringArray0[6] = "org.apache.commons.cli.OptionValidator";
      stringArray0[7] = "-f5xYT*";
      stringArray0[8] = "-=";
      String[] stringArray1 = gnuParser0.flatten(options0, stringArray0, false);
      assertEquals(12, stringArray1.length);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Options options0 = new Options();
      GnuParser gnuParser0 = new GnuParser();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "-=";
      // Undeclared exception!
      try { 
        gnuParser0.flatten(options0, stringArray0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      GnuParser gnuParser0 = new GnuParser();
      Options options0 = new Options();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "---G~'(<NA";
      options0.addRequiredOption("SWxf_", ",", false, "org.apache.commons.cli.OptionValidator");
      stringArray0[1] = "7h}<tB.";
      stringArray0[2] = "--G~'(<NA";
      stringArray0[3] = "H$M`E{M6CFH!'l#";
      stringArray0[4] = "H$M`E{M6CFH!'l#";
      stringArray0[5] = "V";
      stringArray0[6] = "org.apache.commons.cli.OptionValidator";
      stringArray0[7] = "-f5xYT*";
      stringArray0[8] = "-,";
      String[] stringArray1 = gnuParser0.flatten(options0, stringArray0, false);
      assertEquals(9, stringArray1.length);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      GnuParser gnuParser0 = new GnuParser();
      Options options0 = new Options();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "yes";
      stringArray0[1] = "f5xYT*";
      stringArray0[2] = "yes";
      stringArray0[3] = "";
      stringArray0[4] = "%QqCWQsA0m";
      stringArray0[5] = "JP#7";
      stringArray0[6] = "-";
      // Undeclared exception!
      try { 
        gnuParser0.flatten(options0, stringArray0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Options options0 = new Options();
      String[] stringArray0 = new String[13];
      stringArray0[0] = "-f5xYT*";
      GnuParser gnuParser0 = new GnuParser();
      String[] stringArray1 = gnuParser0.flatten(options0, stringArray0, true);
      assertEquals(13, stringArray1.length);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      GnuParser gnuParser0 = new GnuParser();
      Options options0 = new Options();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "--";
      Properties properties0 = new Properties();
      CommandLine commandLine0 = gnuParser0.parse(options0, stringArray0, properties0);
      assertNotNull(commandLine0);
  }
}
