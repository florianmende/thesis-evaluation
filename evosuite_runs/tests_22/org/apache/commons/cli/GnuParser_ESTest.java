/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 05 23:46:13 GMT 2023
 */

package org.apache.commons.cli;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.cli.GnuParser;
import org.apache.commons.cli.Options;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class GnuParser_ESTest extends GnuParser_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      GnuParser gnuParser0 = new GnuParser();
      String[] stringArray0 = new String[0];
      String[] stringArray1 = gnuParser0.flatten((Options) null, stringArray0, false);
      assertNotSame(stringArray0, stringArray1);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      GnuParser gnuParser0 = new GnuParser();
      Options options0 = new Options();
      String[] stringArray0 = new String[1];
      // Undeclared exception!
      try { 
        gnuParser0.flatten(options0, stringArray0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Options options0 = new Options();
      GnuParser gnuParser0 = new GnuParser();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "-?X;-,B=c";
      stringArray0[1] = ",";
      stringArray0[2] = "-?X;-,B=c";
      stringArray0[3] = "-?X;-,B=c";
      stringArray0[4] = "-?X;-,B=c";
      stringArray0[5] = "-,";
      options0.addRequiredOption("w", ",", false, ",");
      String[] stringArray1 = gnuParser0.flatten(options0, stringArray0, false);
      assertEquals(6, stringArray1.length);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      GnuParser gnuParser0 = new GnuParser();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "The addValue method is not intended for client use. Subclasses should use the addValueForProcessing method instead. ";
      stringArray0[1] = "J(O<j3q9YV%Q";
      stringArray0[2] = "org.apache.commons.cli.MissingArgumentException";
      stringArray0[3] = "";
      stringArray0[4] = "";
      stringArray0[5] = ":%>twOsR#+t _";
      stringArray0[6] = "[ Options: [ short ";
      stringArray0[7] = "-";
      String[] stringArray1 = gnuParser0.flatten((Options) null, stringArray0, false);
      assertEquals(8, stringArray1.length);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Options options0 = new Options();
      GnuParser gnuParser0 = new GnuParser();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "-?X;-,B=c";
      String[] stringArray1 = gnuParser0.flatten(options0, stringArray0, true);
      assertEquals(3, stringArray1.length);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      GnuParser gnuParser0 = new GnuParser();
      Options options0 = new Options();
      String[] stringArray0 = new String[5];
      stringArray0[0] = "-&!s#LHp!(6$";
      stringArray0[1] = "";
      stringArray0[2] = "-&!s#LHp!(6$";
      stringArray0[3] = "";
      options0.addOption("", "-&!s#LHp!(6$");
      stringArray0[4] = "--&!s#LHp!(6$";
      String[] stringArray1 = gnuParser0.flatten(options0, stringArray0, false);
      String[] stringArray2 = gnuParser0.flatten(options0, stringArray1, false);
      assertEquals(6, stringArray2.length);
  }
}
