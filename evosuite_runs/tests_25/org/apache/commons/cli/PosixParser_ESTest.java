/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 06 00:47:50 GMT 2023
 */

package org.apache.commons.cli;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.cli.Option;
import org.apache.commons.cli.Options;
import org.apache.commons.cli.PosixParser;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class PosixParser_ESTest extends PosixParser_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      PosixParser posixParser0 = new PosixParser();
      posixParser0.burstToken("", true);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Options options0 = new Options();
      PosixParser posixParser0 = new PosixParser();
      String[] stringArray0 = new String[0];
      String[] stringArray1 = posixParser0.flatten(options0, stringArray0, true);
      assertNotSame(stringArray0, stringArray1);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      PosixParser posixParser0 = new PosixParser();
      // Undeclared exception!
      try { 
        posixParser0.burstToken("~9aC[!vZw`}?X", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.cli.PosixParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Options options0 = new Options();
      PosixParser posixParser0 = new PosixParser();
      options0.addOption("", "jQ", true, "-jQ");
      String[] stringArray0 = new String[2];
      stringArray0[0] = "-jQ";
      stringArray0[1] = "";
      posixParser0.flatten(options0, stringArray0, false);
      posixParser0.burstToken("-org.apache.commons.cli.ParseException", true);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Options options0 = new Options();
      Option option0 = new Option("", ".", true, "");
      options0.addOption(option0);
      PosixParser posixParser0 = new PosixParser();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "-.";
      String[] stringArray1 = posixParser0.flatten(options0, stringArray0, true);
      assertFalse(stringArray1.equals((Object)stringArray0));
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Options options0 = new Options();
      PosixParser posixParser0 = new PosixParser();
      options0.addOption("", "jQ", true, "-jQ");
      String[] stringArray0 = new String[2];
      stringArray0[0] = "-jQ";
      // Undeclared exception!
      try { 
        posixParser0.flatten(options0, stringArray0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Options options0 = new Options();
      PosixParser posixParser0 = new PosixParser();
      Options options1 = options0.addOption("", "org.apache.commons.cli.CommandLine", true, "--,");
      String[] stringArray0 = new String[7];
      stringArray0[0] = "org.apache.commons.cli.CommandLine";
      stringArray0[1] = "org.apache.commons.cli.CommandLine";
      stringArray0[2] = "--,";
      stringArray0[3] = "--,";
      stringArray0[4] = "2k_";
      stringArray0[5] = "org.apache.commons.cli.CommandLine";
      stringArray0[6] = "-1";
      String[] stringArray1 = posixParser0.flatten(options1, stringArray0, true);
      assertEquals(8, stringArray1.length);
      
      posixParser0.burstToken("--,", false);
      String[] stringArray2 = posixParser0.flatten(options1, stringArray0, true);
      assertEquals(7, stringArray2.length);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      PosixParser posixParser0 = new PosixParser();
      Options options0 = new Options();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "---eZta=^b&JBn6";
      // Undeclared exception!
      try { 
        posixParser0.flatten(options0, stringArray0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Options options0 = new Options();
      PosixParser posixParser0 = new PosixParser();
      String[] stringArray0 = new String[9];
      stringArray0[0] = ",";
      String[] stringArray1 = posixParser0.flatten(options0, stringArray0, true);
      String[] stringArray2 = posixParser0.flatten(options0, stringArray1, true);
      assertEquals(11, stringArray2.length);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      PosixParser posixParser0 = new PosixParser();
      Options options0 = new Options();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "%4!*tDXU:V1zVs";
      stringArray0[1] = "G\"";
      stringArray0[2] = "iGY8;0,v";
      stringArray0[3] = "%kn)>sPSvz+[";
      stringArray0[4] = "R5XzBB+WE2[FZD86";
      stringArray0[5] = "!/5`zr5pfi> 5Lf";
      stringArray0[6] = "--org.apache.commons.cli.PosixParser";
      stringArray0[7] = "-";
      try { 
        posixParser0.parse(options0, stringArray0, false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unrecognized option: --org.apache.commons.cli.PosixParser
         //
         verifyException("org.apache.commons.cli.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Options options0 = new Options();
      PosixParser posixParser0 = new PosixParser();
      String[] stringArray0 = new String[9];
      stringArray0[0] = ",";
      Options options1 = options0.addOption("", "G.", false, "2k_");
      String[] stringArray1 = posixParser0.flatten(options0, stringArray0, true);
      posixParser0.burstToken("--", true);
      String[] stringArray2 = posixParser0.flatten(options1, stringArray1, true);
      assertEquals(10, stringArray1.length);
      assertEquals(11, stringArray2.length);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Options options0 = new Options();
      PosixParser posixParser0 = new PosixParser();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "-jQ";
      stringArray0[1] = "";
      posixParser0.flatten(options0, stringArray0, false);
      posixParser0.burstToken("-org.apache.commons.cli.ParseException", true);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Options options0 = new Options();
      PosixParser posixParser0 = new PosixParser();
      String[] stringArray0 = new String[9];
      stringArray0[0] = ",";
      options0.addOption("", "G.", true, "2k_");
      posixParser0.flatten(options0, stringArray0, true);
      posixParser0.burstToken("--", true);
  }
}
